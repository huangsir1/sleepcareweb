<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="taiyi.web.dao.AccountMapper" >
  <resultMap id="BaseResultMap" type="taiyi.web.model.Account" >
    <id column="id" property="id" jdbcType="CHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="CHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="token" property="token" jdbcType="CHAR" />
    <result column="reg_date" property="regDate" jdbcType="TIMESTAMP" />
    <result column="token_date" property="tokenDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, password, phone, token, reg_date, token_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from account
    where id = #{id,jdbcType=CHAR}
  </select>
    <select id="selectByToken" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from account
    where token = #{token,jdbcType=CHAR}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from account
    where id = #{id,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="taiyi.web.model.Account" >
    insert into account (id, username, password, 
      phone, token, reg_date, 
      token_date)
    values (#{id,jdbcType=CHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=CHAR}, 
      #{phone,jdbcType=VARCHAR}, #{token,jdbcType=CHAR}, #{regDate,jdbcType=TIMESTAMP}, 
      #{tokenDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="taiyi.web.model.Account" >
    insert into account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="token != null" >
        token,
      </if>
      <if test="regDate != null" >
        reg_date,
      </if>
      <if test="tokenDate != null" >
        token_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=CHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=CHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="token != null" >
        #{token,jdbcType=CHAR},
      </if>
      <if test="regDate != null" >
        #{regDate,jdbcType=TIMESTAMP},
      </if>
      <if test="tokenDate != null" >
        #{tokenDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="taiyi.web.model.Account" >
    update account
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=CHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="token != null" >
        token = #{token,jdbcType=CHAR},
      </if>
      <if test="regDate != null" >
        reg_date = #{regDate,jdbcType=TIMESTAMP},
      </if>
      <if test="tokenDate != null" >
        token_date = #{tokenDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="taiyi.web.model.Account" >
    update account
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=CHAR},
      phone = #{phone,jdbcType=VARCHAR},
      token = #{token,jdbcType=CHAR},
      reg_date = #{regDate,jdbcType=TIMESTAMP},
      token_date = #{tokenDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>